name: Test Building

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  test-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        build_platform: [x64, Win32]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Plugin Dependencies
        run: make deps

      - name: Compile ${{ matrix.build_platform }} Binary
        run: make compile-${{ matrix.build_platform }}

  test-win:
    runs-on: windows-latest
    needs: test-linux
    strategy:
      max-parallel: 6
      matrix:
        build_configuration: [Release, Debug]
        build_platform: [x64, Win32, ARM64]

    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup NPP Dependencies
        run: |
          make clean
          .\scripts\generate.ps1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: MSBuild of plugin dll
        run: msbuild RAScript.vcxproj /m /p:configuration="${{ matrix.build_configuration }}" /p:platform="${{ matrix.build_platform }}"

      - name: Archive artifacts for x64
        if: matrix.build_platform == 'x64' && matrix.build_configuration == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: RAScript_x64
          path: bin64\RAScript.dll

      - name: Archive artifacts for Win32
        if: matrix.build_platform == 'Win32' && matrix.build_configuration == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: RAScript_x86
          path: bin\RAScript.dll

      - name: Archive artifacts for ARM64
        if: matrix.build_platform == 'ARM64' && matrix.build_configuration == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: RAScript_arm64
          path: arm64\RAScript.dll